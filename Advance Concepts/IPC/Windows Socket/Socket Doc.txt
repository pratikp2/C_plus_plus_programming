*************************************************************************************************************************************
Socket programming is a way of connecting two nodes on a network to communicate with each other. One socket(node) listens on a 
particular port at an IP, while other socket reaches out to the other to form a connection. Server forms the listener socket while
client reaches out to the server.

SERVER		->	Set Socket Opt	->	Bind	->	Listen		->	Accept		->	Send/Recieve	
                                                                  ||						     ||
                                                                  ||						     ||
CLIENT			------>					Connect			------->		Send/Recieve

*************************************************************************************************************************************

UDP (User Datagram Protocol)    :
    -- Small Packet Size (Header is of 8 bytes)
    -- UDP is connectionless (No need to establish connection before sending data)
    -- When UDP detects corruption in data segment it may or may not try to correct the corruption in data segment.(But turns a warning
        flag for the application.)
    -- Every packet is sent out in network once. If packet is dropped out od network then its lost permenantly.
    -- Packet won't necessarly reach the destination in which they were sent.
    -- No Congestion Control (UDP will cram the data in to busy network irrespective of the availability of the bandwidht.)
    -- Checksum is included for the IPv6 teansmission.


TCP (Transmission Control Protocol) :
    -- Large packet size (Header is of 20 bytes)
    -- Connection Oriented (Need to establish connection with three way hand shaking method.)
        1. Sender sendes a requrest to establish the connection
        2. Reciever Accepts it and sends an aknowledgement to the sender.
        3. Then Connection is established.
       Similar process takes place while closing the connection
    -- When data is send over the network then receiver acknowledges that the data has been recieved. This is the reason that
        TCP frames are numbered. When sender does not get delivery acknowledgement then sender tranmitts data segment again into
        Network.
    -- TCP insures the inorder delivery. Packets may arrive into different order but as they are numbered hence tcp can arrange
        into order again before sending them to the application.
    -- TCP provide congestion control. It will delay the data transmission if the network is congested. This helps to minimize
       packet loss.
    -- TCP incluses the checksum bits for error correction purpose. (It has been made mandatory in IPv4 and IPVv6).
